// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Teams.Data.Core.Context;

namespace Teams.Data.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20171127134008_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Entities.Entities.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("NickName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("UsersAccounts");
                });

            modelBuilder.Entity("Database.Entities.Entities.UserToken", b =>
                {
                    b.Property<int>("AccountId");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("ResetPasswordToken");

                    b.HasKey("AccountId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Database.Entities.Entities.UserToken", b =>
                {
                    b.HasOne("Database.Entities.Entities.UserAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
